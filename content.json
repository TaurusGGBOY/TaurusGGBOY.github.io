{"meta":{"title":"gaoguobin","subtitle":null,"description":null,"author":"gaoguobin","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-05-02T10:20:42.000Z","updated":"2019-05-02T11:49:08.382Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"版权声明 本博客里的所有内容，包括但不限于文字、图片等形式，除了注明“转载”的均为本人原创，本人享有相关权益。 对本博客上所有内容的任何形式的引用（包括但不限于在微信、微博、知乎、网络论坛、学术论文等电子和纸质传播途径上的转载、摘录等行为）必须注明出处（作者、篇名、网址），并征得本人书面同意。 本博客上所有内容会不定时进行增删改等修订，对本博客的历史版本的转载等任何形式的引用行为同样遵循第2条。 本博客上所有内容的任何形式的引用（包括但不限于在微信、微博、知乎、网络论坛、学术论文等电子和纸质传播途径上的转载、摘录等行为）不得进行增删和篡改。"},{"title":"categories","date":"2019-05-02T10:24:53.000Z","updated":"2019-05-02T10:39:18.259Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-05-02T10:34:08.000Z","updated":"2019-05-02T10:41:10.824Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用Playmaker实现简单的子弹射击","slug":"使用Playmaker实现简单的子弹射击","date":"2019-06-12T04:22:34.000Z","updated":"2019-06-12T04:29:08.499Z","comments":true,"path":"2019/06/12/使用Playmaker实现简单的子弹射击/","link":"","permalink":"http://yoursite.com/2019/06/12/使用Playmaker实现简单的子弹射击/","excerpt":"有点尴尬。早上看到一个付费咨询，由于在上课说中午来回答，结果中午回来做完了别人关了…… 那么就发出来服务大家8","text":"有点尴尬。早上看到一个付费咨询，由于在上课说中午来回答，结果中午回来做完了别人关了…… 那么就发出来服务大家8 第一步：创建场景创建一个场景这里取名叫Shoot 第二步：创建子弹这里使用一个Capsule作为一个子弹适当缩放和旋转一下这个大小比较合适 第三步：给子弹添加playmakerFSM子弹状态机如上每个状态参数如下大概思路就是每一帧向某个方向运动5秒之后自动摧毁 第四步：将子弹设置为预制体在assets里面右键-》新建预制体-》将我们创建的Ammo拖入删除Hierachy中的Ammo 第五步：创建枪，并添加FSM添加一个Cube作为枪添加PlaymakerFSM组件打开编辑器修改状态如下图其中等待输入的参数如下生成子弹参数如下其中 CreateObject的时候，要选择Assets中的Ammo预制体SPawnPoint为一个空物体，放在你要生成的子弹的位置 这里不赘述 第六步：运行 调试可以看到 有一些坐标系的bug这里就留给您自己解决了","categories":[],"tags":[{"name":"unity","slug":"unity","permalink":"http://yoursite.com/tags/unity/"}]},{"title":"造轮子第二步博客的进阶","slug":"造轮子第二步博客的进阶","date":"2019-05-02T10:20:13.000Z","updated":"2019-05-02T11:51:12.760Z","comments":true,"path":"2019/05/02/造轮子第二步博客的进阶/","link":"","permalink":"http://yoursite.com/2019/05/02/造轮子第二步博客的进阶/","excerpt":"前面我们已经搭建了一个可以使用的博客 但是还不够，我全都要","text":"前面我们已经搭建了一个可以使用的博客 但是还不够，我全都要 博客的进阶草稿 一开始不想直接将文章显示出来就可以用draft hexo new draft 文章名 这时候会在_draft文件夹生成md文件 发布的时候使用hexo publish post 文章名 标签 在md文章的上面加上 tags: &#39;-hexo -造轮子 或 tags: -hexo -造轮子 分类 hexo new page categories 在index.md 开头添加 title: 分类 date: 2014-12-22 12:39:04 type: &quot;categories&quot; --- 在主题配置文件， 添加 categories 到 menu 中，如下: 1234menu: home: / archives: /archives categories: /categories 每篇文章前面也要加上分类 123456title: 造轮子第二步博客的进阶date: 2019-05-02 18:20:13categories: 造轮子tags:- hexo- next 搜索安装 hexo-generator-search在站点的根目录下执行以下命令： 1$ npm install hexo-generator-search --save 安装 hexo-generator-searchdb在站点的根目录下执行以下命令： 1$ npm install hexo-generator-searchdb --save 启用搜索编辑 主题站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 在根目录下的/theme/next/_config.yml文件中搜索local_search，将enable改为true： 12local_search: enable: true 评论系统https://blog.csdn.net/esa_dsq/article/details/78626509 SEOhttps://blog.csdn.net/sinat_37781304/article/details/82729029","categories":[{"name":"造轮子","slug":"造轮子","permalink":"http://yoursite.com/categories/造轮子/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://yoursite.com/tags/next/"}]},{"title":"造轮子第一步自己搭建博客","slug":"造轮子第一步自己搭建博客 - Copy","date":"2019-05-02T09:22:27.000Z","updated":"2019-05-02T11:27:28.114Z","comments":true,"path":"2019/05/02/造轮子第一步自己搭建博客 - Copy/","link":"","permalink":"http://yoursite.com/2019/05/02/造轮子第一步自己搭建博客 - Copy/","excerpt":"既然想要拿到五年之后的ssp的话，总的有一些自己造轮子的东西。` 那么就从第一步简单的自己开始","text":"既然想要拿到五年之后的ssp的话，总的有一些自己造轮子的东西。` 那么就从第一步简单的自己开始 博客的搭建hexo初始化 安装git 安装nodejs 新建文件夹blog 在blog下运行命令npm -install -g hexo-cli 运行hexo init myblog cd myblog npm install hexo g hexo server 进入http://localhost:4000就可以看到你的网站了 hexo部署到Github 打开github，创建xxxx.github.io项目，其中xxxx是你的用户名 打开myblog中的_config.yml 将最后修改为 1234deploy: type: git repo: https://github.com/xxxx/xxxx.github.io.git branch: master ​ 其中xxxx是你的github用户名 除此之外，还要改一下语言 language: zh-CN 运行npm install hexo-deployer-git --save 运行hexo clean hexo generate hexo deploy 途中要登录自己的github账号 访问http://xxxx.github.io可以看到自己的账号了 hexo部署到codingPage 注册codingPage 在codingPage中添加项目，也可以取名为xxxx 将密钥添加到codingPage 运行ssh -T git@git.coding.net 打开myblog中的_config.yml 将最后修改为 12345deploy: type: git repo: coding: git@git.dev.tencent.com:xxxx/xxxx.git,master github: git@github.com:xxxx/xxxx.github.io.git,master ​ 其中xxxx是你的codingPage用户名 hexo g hexo d 代码-Pages服务-一键部署-访问 设置-部署 可尝试访问 更改主题 我自己很喜欢Next这个Blog所以推荐这个 https://github.com/theme-next/hexo-theme-next/releases 下载最新版本的zip包 解压到/myblog/themes 打开myblog中的_config.yml 将后面的主题修改为theme: next 需要注意的是，themes文件夹里面的主题文件夹也要叫做next hexo clean hexo g hexo d 第一篇文章 hexo new post 标题 修改在post文件夹下的md文件 hexo g hexo d 就可以看到文章了 首页显示查看原文按钮 在文章中只要写成如下格式即可： 这是摘要 &lt;!-- more --&gt; 这是全文 需要注意的是，点击 阅读全文 之后，文章会自动定位到 所在位置，想要修改成从头阅读需要修改 主题配置文件 _config.yml 文件：scroll_to_more: false","categories":[{"name":"造轮子","slug":"造轮子","permalink":"http://yoursite.com/categories/造轮子/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"next","slug":"next","permalink":"http://yoursite.com/tags/next/"}]}]}